@startuml

title __STRUCTURAL's Class Diagram__\n

  namespace patterns.structural {
    class patterns.structural.Adapter {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Bridge {
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.CPU {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.CPUImpl {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.CoffeeFlavour {
        {static} - CACHE : WeakHashMap<String, CoffeeFlavour>
        - name : String
        {static} + flavoursInCache()
        {static} + intern()
        + toString()
        - CoffeeFlavour()
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.CoffeeShop {
        - orders : ArrayList<Order>
        + service()
        + takeOrder()
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.Component {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Composite {
        - children : List<Component>
        + add()
        + remove()
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.CompositeDemo {
        {static} + main()
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.ComputerFacade {
        {static} + cpu : CPU
        {static} + mb : MB
        {static} + ram : RAM
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Flyweight {
        {static} + main()
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.Image {
        {abstract} + print()
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Leaf {
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.MB {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.MBImpl {
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.Order {
        {static} + of()
        {abstract} + serve()
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Proxy {
        + print()
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.ProxyDemo {
        {static} + main()
    }
  }
  

  namespace patterns.structural {
    interface patterns.structural.RAM {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.RAMImpl {
    }
  }
  

  namespace patterns.structural {
    class patterns.structural.Real {
        + print()
        - write()
    }
  }
  

  patterns.structural.CPUImpl .up.|> patterns.structural.CPU
  patterns.structural.Composite .up.|> patterns.structural.Component
  patterns.structural.Leaf .up.|> patterns.structural.Component
  patterns.structural.MBImpl .up.|> patterns.structural.MB
  patterns.structural.Proxy .up.|> patterns.structural.Image
  patterns.structural.RAMImpl .up.|> patterns.structural.RAM
  patterns.structural.Real .up.|> patterns.structural.Image


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
