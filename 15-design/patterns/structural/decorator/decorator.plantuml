@startuml

title __DECORATOR's Class Diagram__\n

  namespace patterns.structural {
    namespace decorator {
      abstract class patterns.structural.decorator.AbstractDecorator {
          + AbstractDecorator()
          + print()
      }
    }
  }
  

  namespace patterns.structural {
    namespace decorator {
      class patterns.structural.decorator.BaseClass {
          + print()
      }
    }
  }
  

  namespace patterns.structural {
    namespace decorator {
      class patterns.structural.decorator.ConcreteDecorator1 {
          + ConcreteDecorator1()
          + print()
      }
    }
  }
  

  namespace patterns.structural {
    namespace decorator {
      class patterns.structural.decorator.ConcreteDecorator2 {
          + ConcreteDecorator2()
          + print()
      }
    }
  }
  

  namespace patterns.structural {
    namespace decorator {
      class patterns.structural.decorator.Decorator {
          {static} + main()
      }
    }
  }
  

  namespace patterns.structural {
    namespace decorator {
      interface patterns.structural.decorator.Interface {
          {abstract} + print()
      }
    }
  }
  

  patterns.structural.decorator.AbstractDecorator .up.|> patterns.structural.decorator.Interface
  patterns.structural.decorator.AbstractDecorator o-- patterns.structural.decorator.Interface : wrapped
  patterns.structural.decorator.BaseClass .up.|> patterns.structural.decorator.Interface
  patterns.structural.decorator.ConcreteDecorator1 -up-|> patterns.structural.decorator.AbstractDecorator
  patterns.structural.decorator.ConcreteDecorator2 -up-|> patterns.structural.decorator.AbstractDecorator


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
